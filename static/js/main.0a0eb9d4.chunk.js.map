{"version":3,"sources":["components/MarkdownContext.js","config/index.js","components/Editor.js","components/Previewer.js","components/App/index.js","components/App/App.js","index.js"],"names":["MarkdownContext","createContext","MarkdownProvider","children","useState","markdown","setMarkdown","editorMaximized","setEditorMaximized","previewMaximized","setPreviewMaximized","Provider","value","Editor","useContext","className","style","display","onClick","prevState","id","onChange","event","target","marked","setOptions","breaks","Previewer","editor","useRef","useEffect","current","innerHTML","ref","App","ReactDOM","render","document","getElementById"],"mappings":"+QAIaA,EAAkBC,0BAElBC,EAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAChBC,mBCNhC,uqCDKgD,mBACzCC,EADyC,KAC/BC,EAD+B,OAKFF,oBAC5C,GAN8C,mBAKzCG,EALyC,KAKxBC,EALwB,OAQAJ,oBAC9C,GAT8C,mBAQzCK,EARyC,KAQvBC,EARuB,KAYhD,OACE,kBAACV,EAAgBW,SAAjB,CACEC,MAAO,CACLP,WACAC,cACAC,kBACAC,qBACAC,mBACAC,wBAGDP,IEgBQU,EA1CA,WAAO,IAAD,EAOfC,qBAAWd,GALbK,EAFiB,EAEjBA,SACAC,EAHiB,EAGjBA,YACAC,EAJiB,EAIjBA,gBACAC,EALiB,EAKjBA,mBACAC,EANiB,EAMjBA,iBAaF,OACE,yBACEM,UAAS,2BACPR,EAAkB,aAAe,IAEnCS,MAAO,CAAEC,QAASR,EAAmB,OAAS,KAE9C,yBAAKM,UAAU,eACb,sCACA,0BACEA,UAAU,YACVG,QAfY,WAClBV,GAAmB,SAAAW,GAAS,OAAKA,SAiB/B,8BACEC,GAAG,SACHR,MAAOP,EACPgB,SA3Be,SAAAC,GAAU,IACrBV,EAAUU,EAAMC,OAAhBX,MAERN,EAAYM,Q,gBCPhBY,IAAOC,WAAW,CAChBC,QAAQ,IAuCKC,MApCf,WAAsB,IAAD,EAMfb,qBAAWd,GAJbK,EAFiB,EAEjBA,SACAI,EAHiB,EAGjBA,iBACAC,EAJiB,EAIjBA,oBACAH,EALiB,EAKjBA,gBAEIqB,EAASC,mBAUf,OAJAC,qBAAU,WACRF,EAAOG,QAAQC,UAAYR,IAAOnB,KACjC,CAACA,IAGF,yBACEU,UAAS,4BACPN,EAAmB,YAAc,IAEnCO,MAAO,CAAEC,QAASV,EAAkB,OAAS,KAE7C,yBAAKQ,UAAU,kBACb,yCACA,0BACEA,UAAU,YACVG,QAnBY,WAClBR,GAAoB,SAAAS,GAAS,OAAKA,SAqBhC,yBAAKC,GAAG,UAAUa,IAAKL,MCzCdM,ECIH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0a0eb9d4.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nimport { editorPlaceholder } from '../config';\r\n\r\nexport const MarkdownContext = createContext();\r\n\r\nexport const MarkdownProvider = ({ children }) => {\r\n  const [markdown, setMarkdown] = useState(\r\n    editorPlaceholder\r\n  );\r\n\r\n  const [editorMaximized, setEditorMaximized] = useState(\r\n    false\r\n  );\r\n  const [previewMaximized, setPreviewMaximized] = useState(\r\n    false\r\n  );\r\n\r\n  return (\r\n    <MarkdownContext.Provider\r\n      value={{\r\n        markdown,\r\n        setMarkdown,\r\n        editorMaximized,\r\n        setEditorMaximized,\r\n        previewMaximized,\r\n        setPreviewMaximized\r\n      }}\r\n    >\r\n      {children}\r\n    </MarkdownContext.Provider>\r\n  );\r\n};\r\n","export const editorPlaceholder =\r\n  '# Welcome to my React Markdown Previewer!\\n\\n' +\r\n  '## This is a sub-heading...\\n' +\r\n  \"### And here's some other cool stuff:\\n\\n\" +\r\n  'Heres some code, `<div></div>`, between 2 backticks.\\n\\n' +\r\n  '```\\n' +\r\n  '// this is multi-line code:\\n\\n' +\r\n  'function anotherExample(firstLine, lastLine) {\\n' +\r\n  \"  if (firstLine == '```' && lastLine == '```') {\\n\" +\r\n  '    return multiLineCode;\\n' +\r\n  '  }\\n' +\r\n  '}\\n' +\r\n  '```\\n\\n' +\r\n  'You can also make text **bold**... whoa\\n' +\r\n  'Or _italic_.\\n' +\r\n  'Or... wait for it... **_both!_**\\n' +\r\n  'And feel free to go crazy ~~crossing stuff out~~.\\n\\n' +\r\n  \"There's also [links](https://www.freecodecamp.com), and\\n\" +\r\n  '> Block Quotes!\\n\\n' +\r\n  'And if you want to get really crazy, even tables:\\n\\n' +\r\n  'Wild Header | Crazy Header | Another Header?\\n' +\r\n  '------------ | ------------- | ------------- \\n' +\r\n  'Your content can | be here, and it | can be here....\\n' +\r\n  'And here. | Okay. | I think we get it.\\n\\n' +\r\n  '- And of course there are lists.\\n' +\r\n  '  - Some are bulleted.\\n' +\r\n  '     - With different indentation levels.\\n' +\r\n  '        - That look like this.\\n\\n\\n' +\r\n  '1. And there are numbererd lists too.\\n' +\r\n  '1. Use just 1s if you want!\\n' +\r\n  '1. But the list goes on...\\n' +\r\n  '- Even if you use dashes or asterisks.\\n' +\r\n  \"* And last but not least, let's not forget embedded images:\\n\\n\" +\r\n  '![React Logo w/ Text](https://goo.gl/Umyytc)';\r\n","import React, { useContext } from 'react';\r\nimport { MarkdownContext } from './MarkdownContext';\r\n\r\nconst Editor = () => {\r\n  const {\r\n    markdown,\r\n    setMarkdown,\r\n    editorMaximized,\r\n    setEditorMaximized,\r\n    previewMaximized\r\n  } = useContext(MarkdownContext);\r\n\r\n  const handleChange = event => {\r\n    const { value } = event.target;\r\n\r\n    setMarkdown(value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setEditorMaximized(prevState => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`editor-container ${\r\n        editorMaximized ? ' maximized' : ''\r\n      }`}\r\n      style={{ display: previewMaximized ? 'none' : '' }}\r\n    >\r\n      <div className=\"edit-header\">\r\n        <h1>Editor</h1>\r\n        <span\r\n          className=\"open-full\"\r\n          onClick={handleClick}\r\n        ></span>\r\n      </div>\r\n      <textarea\r\n        id=\"editor\"\r\n        value={markdown}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, {\r\n  useContext,\r\n  useEffect,\r\n  useRef\r\n} from 'react';\r\nimport { MarkdownContext } from './MarkdownContext';\r\nimport marked from 'marked';\r\n\r\nmarked.setOptions({\r\n  breaks: true\r\n});\r\n\r\nfunction Previewer() {\r\n  const {\r\n    markdown,\r\n    previewMaximized,\r\n    setPreviewMaximized,\r\n    editorMaximized\r\n  } = useContext(MarkdownContext);\r\n  const editor = useRef();\r\n\r\n  const handleClick = () => {\r\n    setPreviewMaximized(prevState => !prevState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    editor.current.innerHTML = marked(markdown);\r\n  }, [markdown]);\r\n\r\n  return (\r\n    <div\r\n      className={`preview-container ${\r\n        previewMaximized ? 'maximized' : ''\r\n      }`}\r\n      style={{ display: editorMaximized ? 'none' : '' }}\r\n    >\r\n      <div className=\"preview-header\">\r\n        <h1>Previewer</h1>\r\n        <span\r\n          className=\"open-full\"\r\n          onClick={handleClick}\r\n        ></span>\r\n      </div>\r\n      <div id=\"preview\" ref={editor}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Previewer;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Editor from '../Editor';\r\nimport Previewer from '../Previewer';\r\nimport { MarkdownProvider } from '../MarkdownContext';\r\n\r\nconst App = () => {\r\n  return (\r\n    <MarkdownProvider>\r\n      <Editor />\r\n      <Previewer />\r\n    </MarkdownProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}